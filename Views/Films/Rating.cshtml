@model IEnumerable<pfi.Models.RatingView>
@{
    pfi.Models.UserView onlineUser = pfi.Models.OnlineUsers.CurrentUser;
    var Film = ViewBag.Film;

    int FilmId = Film.Id;
}

<h2>Évaluations</h2>

<table class="table">
    <tr>
        <td>
            @using (Html.BeginForm("AddRating", "Films"))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().FilmId, new { @Value = FilmId })
                    @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().RatingDate, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().Film, new { @Value = Film })
                    <table>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(modelItem => modelItem.FirstOrDefault().Value, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <br />
                                    <br />
                                    <div class="col-md-10">
                                        @Helper.RatingBar("Rating")
                                        @Html.EditorFor(modelItem => modelItem.FirstOrDefault().Value, new { htmlAttributes = new { @class = "form-control", required = "required", max = 5, min = 1 } })
                                        @Html.ValidationMessageFor(modelItem => modelItem.FirstOrDefault().Value, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstOrDefault().Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <br />
                                    <br />
                                    <div class="col-md-10" style="color:black">
                                        @Html.TextAreaFor(model => model.FirstOrDefault().Comment, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Commenter ici..." } })
                                        @Html.ValidationMessageFor(model => model.FirstOrDefault().Comment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Évaluer" class="btn btn-default" />
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </table>
                    <hr />
                </div>
            }
        </td>

    </tr>
    <tr>
        <th>
            <h2>Commentaires</h2>
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <b>@item.User.UserName</b>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
                @Helper.RatingBar("Rating", item.Value, true)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RatingDate)
            </td>
            @if (item.User.Id == onlineUser.Id || onlineUser.Admin)
            {
                <td>
                    @Helper.GlyphiconAction("", "EditRating/" + item.Id, "glyphicon glyphicon-edit", "Modifier l'évaluation")
                </td>
                <td>
                    @using (Html.BeginForm("DeleteRating", "Films"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().Id, new { @Value = item.Id })
                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().Comment, new { @Value = item.Comment })
                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().Film, new { @Value = Film })
                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().User, new { @Value = onlineUser.ToUser() })
                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().FilmId, new { @Value = FilmId })

                        @Html.HiddenFor(modelItem => modelItem.FirstOrDefault().RatingDate, new { htmlAttributes = new { @class = "form-control" } })

                        <div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Effacer" class="btn btn-danger" />
                                </div>
                            </div>
                        </div>
                    }
                </td>
            }

        </tr>
    }
</table>

@section Scripts {
    @Scripts.Render("~/bundles/RatingBar")
    @Scripts.Render("~/bundles/jqueryval")
}